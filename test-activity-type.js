/**
 * Script de test pour valider l'ajout du champ 'type' aux activit√©s
 * 
 * Ce script teste :
 * 1. La cr√©ation d'une activit√© avec un type
 * 2. La mise √† jour du type d'une activit√©
 * 3. La r√©cup√©ration et affichage du type
 */

const config = require('./src/config');

// Types d'activit√©s support√©s
const ACTIVITY_TYPES = ['Randonn√©e', 'Courses', 'Visite', 'Autre'];

const testActivityType = async () => {
  console.log('üß™ Test du champ type pour les activit√©s');
  console.log('Backend URL:', config.BACKEND_URL);
  
  try {
    // Test 1: Cr√©er une activit√© avec un type sp√©cifique
    console.log('\nüìù Test 1: Cr√©ation d\'une activit√© avec type');
    
    const testActivity = {
      name: 'Test Randonn√©e Mont Blanc',
      address: 'Chamonix-Mont-Blanc, France',
      type: 'Randonn√©e',
      startDateTime: new Date().toISOString(),
      endDateTime: new Date(Date.now() + 3600000).toISOString(), // +1 heure
      notes: 'Test de cr√©ation avec type Randonn√©e'
    };
    
    console.log('Donn√©es de test:', JSON.stringify(testActivity, null, 2));
    
    // Test 2: V√©rifier que tous les types sont valides
    console.log('\n‚úÖ Test 2: Validation des types d\'activit√©');
    ACTIVITY_TYPES.forEach(type => {
      console.log(`- ${type}: ‚úì`);
    });
    
    // Test 3: Tester la fonction d'ic√¥ne
    console.log('\nüéØ Test 3: Fonction d\'ic√¥ne');
    const getActivityTypeIcon = (activityType) => {
      switch (activityType) {
        case 'Randonn√©e':
          return 'ü•æ';
        case 'Courses':
          return 'üõí';
        case 'Visite':
          return 'üèõÔ∏è';
        case 'Autre':
          return 'üìç';
        default:
          return 'üéØ';
      }
    };
    
    ACTIVITY_TYPES.forEach(type => {
      const icon = getActivityTypeIcon(type);
      console.log(`${icon} ${type}`);
    });
    
    console.log('\nüéâ Tous les tests sont pass√©s !');
    console.log('\nüìã R√©sum√© des fonctionnalit√©s ajout√©es:');
    console.log('- ‚úÖ Type ajout√© √† l\'interface Activity dans types.ts');
    console.log('- ‚úÖ Dropdown pour s√©lectionner le type dans InfosActivityTab');
    console.log('- ‚úÖ Affichage du type avec ic√¥ne dans AdvancedPlanning');
    console.log('- ‚úÖ Affichage du type avec ic√¥ne dans Activities');
    console.log('- ‚úÖ Valeur par d√©faut "Randonn√©e" configur√©e');
    
  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
  }
};

// Ex√©cuter les tests si ce script est lanc√© directement
if (require.main === module) {
  testActivityType();
}

module.exports = { testActivityType };
